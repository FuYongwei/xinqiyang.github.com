<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Xinqiyang's Blog]]></title>
  <link href="http://xinqiyang.freeflare.com/atom.xml" rel="self"/>
  <link href="http://xinqiyang.freeflare.com/"/>
  <updated>2014-03-24T15:28:18+09:00</updated>
  <id>http://xinqiyang.freeflare.com/</id>
  <author>
    <name><![CDATA[xinqiyang]]></name>
    <email><![CDATA[xinqiyang@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[小小码农的产品观]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2014/03/17/xiao-xiao-ma-nong-de-chan-pin-guan/"/>
    <updated>2014-03-17T15:53:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2014/03/17/xiao-xiao-ma-nong-de-chan-pin-guan</id>
    <content type="html"><![CDATA[<p>小小码农的产品观念</p>

<p>这篇是继之前写的一篇<a href="http://xinqiyang.freeflare.com/blog/2014/03/08/ru-he-zuo-%5B%3F%5D-kuan-chan-pin/">如何做一款产品</a>,继续而写,还是继续讨论产品.</p>

<h3>寻找葵花宝典</h3>

<p>最近在看之前收藏的2篇文章 <br/>
1  <a href="http://www.yunkeji.com/?p=9358">舒迅：产品经理必读的九步法(原文)</a>
说起舒讯,还有一面之缘,我认识他,人家未必认识我啊.想想3年前还在百度的时候,我所在的部门被拆解并入贴吧,就这样见过了这位当时贴吧的总经理.人还是和和善的一个人,当时的贴吧,还是有一些技术风气在里面的,有几个百度的哥们,技术派,还是有点佩服的,不知道现在怎么样了. 最近在学如何做产品,就像是一个只会切砖的泥瓦工要学建筑设计一样,摸不着头脑,就索性去找一些葵花宝典来看看,这就算是一篇吧.</p>

<p>2  <a href="https://www.evernote.com/shard/s168/sh/420e642e-2e77-4829-8688-94a5dc0e6adf/ca6ff72d82869a2e4ac623eb59fa5a2e">微信的产品观</a> 这个是网络上的各种资料拼凑而来的.
从微信的回顾,到用户,需求,设计,气质,UI等个个方面点来讲,这个算是目前来看,看到的比较新颖的题材的产品方面的总结文章了,相对上面一篇较传统的需求理论来看,也能影射出2家公司的不同,百度系的产品相对比较保守性,腾讯系的产品目标很明确,赚钱的能力还是较强的,这个也是现在2个公司的市值差距所在吧.</p>

<p>这2篇文章,细细的品读3遍以后,来敲这篇文章.在此之前,先说说为什么要学产品设计呢?  <br/>
作为码农,一直处于PM的压迫之前,一直以来一直如此,但是有这么一个小小码农,梦想着有一天能够改变自己的命运,所以他开始学习产品知识,开始学习后台ApiServer端的开发,学习Mis后台管理系统的开发,学习前端的Web端的开发,学习IOS客户端的开发,到学Android这块已经是精疲力尽的,无奈从其他的地方搞来源码改改, 学习这些之后,可以感叹下,自己感觉是一个&#8221;full stack developer&#8221;! 这里只是自我感觉,该鄙视的就鄙视下吧.</p>

<!-- more -->


<h3>为什么着重说产品观念呢?</h3>

<p>首先做产品,失败者居多,因为有很多的不靠谱的PM乃至大佬们在操纵着.从之前在百度,到现在出来,真正的成功的产品寥寥无几,可以说是没有吧.那么如何说一个产品的成功呢? 我个人认为成功的产品是自己有造血能力,能够给公司或团队带来实际的营收,团队成员可以从产品获得丰厚的回报,这里典型的就是一些网络游戏开发小组,动不动就是36~48个月的奖金或者是腾讯的一些产品团队,年终奖1台Mac或者是iPhone在加上多个月的奖金.这样的组,能让人多有干劲啊,但是无奈的现实是,我这个衰人,没有这样的福气能在这样的团队里面.  <br/>
好吧,说会着重说产品观念,一个产品的成功与否,关乎很多.其实主要在与管理层,当是在创业团队的时候更着重的看中这个,一个不靠谱的理念直接意味着产品的失败,进而导致了团队的解散. <br/>
当我们自己假设作为一个产品的设计者,当真正的面对这个问题的时候,如果真没有点三脚猫的功夫是无法承担下来的.  <br/>
所以产品观念在创业过程中是重中之重.特别需要注意,当然我现在也是想如何才能够让自己做的事情不是做无用功,而是能够真正的创造出效益出来,不至于团队解散而已失败告终.</p>

<h3>读后做的笔记</h3>

<p>从文章1中,讲感触最深的句子记录下来,真的很推荐大家认真的品读以上2篇文章. <br/>
&ldquo;满足用户需求&rdquo;,用户是一个虚拟的概念,用户实际上根本不知道自己需要什么. 在今天iPhone,微博,微信不离手的人几年前又哪知道自己需要这个? <br/>
小小码农注解:我现在做的东西,就想自己用着方便就好,别人的需求搞不定,我可以先解决自己的迫切需要,或许像我这样有这样需求的人还是很多的.自己先了解自己需要什么,并把它记录下来.</p>

<p>其实内心不知道自己需要什么,于是产品彻底失败了.假如你只是去做一个既有产品的新功能或者想设计一个新玩意,那有2个参悟&#8221;用户需求&#8221;更切实的做法:  <br/>
   1,疯狂的热爱你的产品  <br/>
   2,尝试去解决你遇到的最大痛点.   <br/>
只有抓住&#8221;最核心需求&#8221;一点一滴的去改进提高,才能从量变引起质变. <br/>
小小码农注解: 疯狂的人爱自己的产品,其实这点我已经做到了,3年来,我不断的一天一天用一行一行的代码来实现它,没有放弃过.可惜现在还没有正式面世,还无法解决自己遇到的最大痛点.它无法盈利&hellip;现在得着手解决这些最大的问题,无法盈利&hellip;..</p>

<p>别人为什么用我,大公司和小公司做产品的区别,大公司能快速的将一个产品推到用户的面前.&ldquo;小米手机一千多块钱,但用起来和苹果一样,多划算啊.&rdquo;,这就是产品的定位,这就是产品的独特性. 那些后发而胜出者,都是对这个问题有深刻的理解和超凡的控制技巧.微信的独特性是&#8221;私密&#8221;.</p>

<p>分解用户,根据产品的核心价值,将用户分解成不同角色.有什么用,别人凭什么用,如何更好用. 如何更好用的关键是变成用户,站在用户的角度进行思考. UGC产品,看的用户,写的用户.论坛:流量用户,发帖用户,班主. B2C:浏览用户,交易用户,电子商务:卖家,买家. 等等.. 角色的划分,和产品的运营程度有关,进入精细化阶段,需要更细的分解角色.按照X轴和Y轴来区分.</p>

<p>小小码农注解: 这个是现在还无法做的,用户的分解,然后区分开来,这个需要功力的积累.</p>

<p>变成用户.   该角色为什么会使用这个产品?该角色怎样知晓和达到这个产品? 带入角色进行cosplay.
一个产品只会有一个一级需求,其他的都是二级需求.你只要在产品或者运营上,拥有一个与众不同的特点,并能把这个特点发挥到极致,让竞争对手追而不能及,那也能在市场上成功.</p>

<p>小小码农注解:自己现在就是一个用户,如何来使用这个软件或者网站以实现自己的第一需求.</p>

<p>确定角色成就.每一类角色如何在使用产品过程中成长,不断得到满足,这就是产品的持续成长的关键.
没有用户积分类的产品成了另类,比如微信.</p>

<p>用户核心需求被满足时获得的成就感,当无关的激励被干扰到他的核心需求时,他真正的成就感降级了.</p>

<p>电商企业,一个关键点搞好了,收入就上升了,一个关键点没搞好,收入就下降了.这个直接和奖金有关.
浏览用户, 交易用户,种子用户,初期用户.</p>

<p>形成闭环,让产品自动成长.</p>

<p>迅速迭代只是一个手段,是更好的满足用户体验,所以产品升级要给用户一个超出预期的体验,让用户盼望和等待你的升级.</p>

<p>暂且称为葵花宝典第一部吧,读了之后,体会到做PM的不易啊,回想起那个时候对PM的叫板,现在真的很惭愧真的很惭愧,我在这里向被我叫板过的PM道歉,不过看她现在挺好的,到美团当PM的了,一个实力很强大的清华女强PM,祝福她. 做产品其实真的不易,现在看来产品的失败不能全部怪PM,如果更高层出问题了,依靠PM来扭转乾坤是不大可能的.现在看来,一个大型互联网公司的产品的观察期基本就1-2年,基本不行就会被毙掉.大家都不容易啊&hellip;</p>

<p>从文章2中记录下来的一些句子: <br/>
这个是与微信相关的,最近微信又更新了新版本了,界面都比较扁平化了.</p>

<p>从微信的发展过程中看到的.
产品经理是站在上帝身边的人
1.快速迭代 基本以3个月为一个阶段, 使用scrum 进行一次产品的迭代,在加前台和后台的新的功能.
2.产品方面 <br/>
了解人性  <br/>
了解群体心理   <br/>
建造系统并制定规则,让群体在系统中演化.</p>

<p>小小码农注解: <br/>
快速迭代3个月,基本都可以做一个产品了,微信确实和其他的产品都不一样,还是挺赞的.  <br/>
了解人性,其实最简单最不容易犯错误.建造系统,就得自己指定规则,这个需要大家的智慧,一个人还是挺难的.</p>

<p>人是环境的反应器 <br/>
地域的区别  <br/>
在路上看东西和在电脑前看东西是不一样的.   (用户获取部分)  <br/>
朋友圈的拍照和qzone相册的区别.  <br/>
产品营造环境,决定用户反应. <br/>
小小码农注解: <br/>
微信主要做手机移动端,现在还有Mac客户端了,先占领了屌丝群体,还有就是感觉微信的速度还是很赞的,而且出问题的时候比较少,是个大厂出来的东西.</p>

<p>人是懒惰的
懒惰导致发明
懒惰是创新的动力
案例:语音查找联系人
小小码农注解:   <br/>
好多的功能其实都没用过,这个就是,现在感觉语音还不大可能尝鲜,用着还是不习惯.</p>

<p>时尚是驱动力
因为别人都在用
人是跟风的
在互联网产品中, “时尚” 是重要的驱动力
不要太”工具化”</p>

<p>人没有耐心
用户没有耐心看你的说明书
如果不能让用户一分钟爱上你
产品做好前不轻易拉用户来你的产品</p>

<p>人不爱学习  <br/>
博客的衰落.  <br/>
马桶阅读理论: 不要给用户超过马桶上看不完的内容.</p>

<p>用户是乌合之众
&lt;乌合之众>  <br/>
群体智商低于个人智商 <br/>
互联网的产品是群体,不是个体  <br/>
不用用对待个体的方式来对待群体,尤其是互联网产品</p>

<p>重视屌丝用户群
facebook,pinterest,instagram,path等产品解决了人的”存在感”问题.存在感是指人离开了SNS就觉得自己与人群脱节被孤立而无价值.这些产品在中国不能普及,因为中国人面临的问题比存在感还低一个层次,是”生存感”.但中国有这样的一群群体,他们既有生存感的压力,又有存在感的渴望,这群人就是”屌丝” . 中国互联网的主题用户心理和需求,应从了解屌丝群生存和心理状态入手,搞清了屌丝,就把握住了用户群.</p>

<p>从日常体验中发现本质 <br/>
触碰开关,比普通开关更贴近人的情感.   <br/>
伟大的产品应该满足人的情感需求.   <br/>
小小码农注解: <br/>
问题是人的情感是多么复杂的啊,还是很难满足全部人,满足大部分已属不易了.</p>

<p>让不上微博的用户来用你的产品    <br/>
他们才是主题用户群,懒到连微博都不上的.    <br/>
他们就在你的身边    <br/>
时刻想到,他们才是你的用户.</p>

<p>人性化即是以己推人   <br/>
你无法理解他人,只能理解自己    <br/>
你需要了解人最普遍的心理活动.   <br/>
小小码农注解: <br/>
这个是否可以概括为做自己喜欢做的产品,写自己喜欢写的代码.</p>

<p>需求是满足人们的贪嗔痴  <br/>
产品的终极目标是满足人性需求   <br/>
不再产品中掺和自己的道德感   <br/>
满足贪嗔痴,但又要用户&#8221;少发微信&#8221;.时间是荒诞的.    <br/>
产品是技术和艺术的结合 &mdash; steve jobs  <br/>
小小码农注解: <br/>
产品要满足人们贪嗔痴,就得构建各种对比体系,形成差分的市场了.</p>

<p>对新点子,99%的情况下否定是对的 <br/>
大部分&#8221;我有个好注意&#8221;都是脱离需求的.    <br/>
不臆想需求    <br/>
小小码农注解: <br/>
能想的能用的都被大家用过了&hellip;</p>

<p>不要用户说要什么就做什么   <br/>
不直接满足用户需求   <br/>
用户需求是零散的,解决方案是归纳抽象的过程   <br/>
用户反馈只是帮助你了解他们的想法   <br/>
小小码农注解: <br/>
这个和马克说的一样,个人也赞同这个观点,比较会提出问题的都是少数人.我在腾讯的产品留言板提出过好几次的需求,都没有被采纳,这个也算是很正常的.</p>

<p>大部分新功能是可以砍掉的 <br/>
回顾一下,你们做了多少功能,是可以不做的. <br/>
小小码农注解: <br/>
经历过的被砍掉的功能太多了,很多做出来的遇到版本更新被砍掉了,有的时候,还没做完的功能就被砍掉了.总之还是悲剧居多&hellip;.所以能尽量少做就少做.</p>

<p>不从同类产品里找需求   <br/>
涂鸦重要吗?<br/>
从别的产品里,你无法深刻理解需求.</p>

<p>不要听产品经理的需求  <br/>
他们不是用户却义乌代表用户   <br/>
他们的分析过于理性    <br/>
他们会要去你加是否在线,是否已发送到手机,是否已读,是否分组,要多终端同步,要云端保存,等等&hellip;&hellip;..你去用其他同类产品吧.</p>

<p>需求来自你对用户的了解    <br/>
需求不来自调研   <br/>
需求不来自分析    <br/>
需求不来自讨论   <br/>
需求不来自竞争对手   <br/>
小小码农注解: <br/>
需求来与于哪里真不好说,姑且说来自于老大吧.谁能拍板就可以定了,这个还是取决于拍板的人吧.</p>

<p>从微博上感受用户的潮流    <br/>
每天花一个小时看普通用户在微博上讨论他们是如何用你的产品的.    <br/>
他们的场景,感受等.   <br/>
他们所处的时代潮流往哪里走     <br/>
忽略评论家的意见   <br/>
等待他们说&#8221;太好玩了&#8221;     <br/>
小小码农注解: <br/>
努力做到大家说太好玩了,这个是我们的终极目标..确实能让人感觉太好玩了,这个就是一种成功.</p>

<p>从用户讨论中发现灵感    <br/>
微博上的用户帖子,才是真实场景的反应</p>

<p>每个时代都有每个时代的产品 <br/>
对时代潮流保持敏锐    <br/>
从QQ到微信   <br/>
小小码农注解: <br/>
时代在变,很多产品也不可能一成不变. 做新产品还是得有勇气的.但是不管怎么样,自己做自己的就好了.</p>

<p>满足自己需求由于满足用户需求   <br/>
你无法真正理解他人    <br/>
你无法满足海量的个体的个性需求    <br/>
人同此心,从自身捕获大众需求   <br/>
案例:已阅读    <br/>
案例:语音写提醒,语音找人</p>

<p>找到需求背后的心理诉求   <br/>
需求的本质往往可以归结为 心理诉求   <br/>
漂流瓶:满足倾诉,好奇的心理.</p>

<p>心理满足的驱动力远胜工具甚至省钱   <br/>
省钱的短信替代工具不会成功.如果定位于更省钱的工具,可能就麻烦了. <br/>
微信不是QQ,&ldquo;微信,不只是一个通讯工具&rdquo; <br/>
微信是一个生活方式,反映的是心理满足至上.</p>

<p>&ldquo;爽&rdquo; 胜过功能 <br/>
爽,(营销的目的是让用户觉得&#8221;爽&#8221;) <br/>
好玩!(微博评论说&#8221;好玩&#8221;就对了)  <br/>
口碑传销的基础是&#8221;好玩&#8221; <br/>
爽是体验.体验比更难更易传播 <br/>
小小码农注解: <br/>
想达到这个很难,但是可以做去了之后,在期待大家的回复了.</p>

<p>为群体效应而做: 附近的人<br/>
案例:附近的人   <br/>
不是为了陌生人交友,是为了好奇心 <br/>
他们会发生什么?  <br/>
它是群体效应的,每个人在观察别人,也在被观察  <br/>
他们的第一次在现实中大规模互相看到</p>

<p>为群体效应而做  :  摇一摇 <br/>
人们会喜欢简单的行为动作  <br/>
人们会对随机好奇  <br/>
人们会对垮空间的同类好奇 <br/>
它有群体效应&hellip;.</p>

<p>为想法而做:朋友圈 <br/>
想法:人人需要在朋友关注中获得存在感,照片是手机最佳互动载体,人只需要三五好友,人需要不暴露好友但又要扎堆   <br/>
一种比facebook,path更私密的社区 <br/>
想法比功能重要   <br/>
为自己要用而做</p>

<p>只抓主场景,不做全功能  <br/>
做大而全很容易,走少很难   <br/>
如果没有化繁为简的能力,就克制自己的做多的欲望  <br/>
做多源于不自信  <br/>
每天看到几个需求的爽,远大于提出几个需求   <br/>
案例: 朋友圈只能发照片, 发140字的难度远胜一张照片</p>

<p>不要从扎略分析来逆推需求  <br/>
Microsoft,Nokia,Google</p>

<p>调研获得需求是骗人的  <br/>
从大量反馈看出需求是骗人的(群的需求,用户会告诉你他们需求的是QQ群)  <br/>
用户反馈能帮助完善体验,但不会告诉你要做什么新东西   <br/>
从数据统计看出需求更是骗人的.</p>

<p>小小码农注解: <br/>
从统计数据看出一些产品的整体使用情况,还是很正常的,这个没有感觉有什么不对的.</p>

<p>需求来源于对群体效应的好奇   <br/>
需求来源于自身需求和周边朋友反馈  <br/>
蓝牙支持,web微信,待办置顶,换手机迁移  <br/>
需求来自于对当下生活潮流的理解  <br/>
朋友圈:人们需要从和朋友的互动中很安全地找到存在感,并且很舒适..</p>

<p>需求来自于对平台的理解 <br/>
开发平台的接口很美  <br/>
开放平台的生态很诱人 <br/>
开放平台带来的不确定性令人期盼 <br/>
生态系统,而非单独产品</p>

<p>需求来自对信息流的理解  <br/>
订阅平台:让所有信息成为可Push的   <br/>
让个体都能显现   <br/>
让品牌通过朋友传播</p>

<p>需求来自于建立新系统<br/>
让二维码普及起来,成为入口  <br/>
通过建立简单规则,创作一个自运行系统,满足人群的某种心理或经济需要</p>

<p>在最后一刻才决定新版本特性 <br/>
不预先规划版本功能, 一个版本做完了,才确定下一个版本的需求   <br/>
长期在脑袋中酝酿各种可能的特性 <br/>
重要的需求会在合适的时间自己浮现<br/>
案例:附件的人 <br/>
小小码农注解: <br/>
不预先规划版本, 其实可以收集一个需求列表,然后根据用户的反馈和统计数据在决定接下来优先做哪些功能.</p>

<p>世界是新的  <br/>
忘记过去的数据甚至经验  <br/>
对当前和未来的趋势的洞察才重要<br/>
PC上的入口在搜索框,手机上的入口在二维码</p>

<p>产品是演化出来的而非规划出来的 <br/>
微信的每个版本该做什么,都是等上一个版本发布后才确定  <br/>
我们不可能知道半年后的产品形态.规划是骗人的 <br/>
美国版本的确定越后越好,取决于当时的整体用户体验,以及对当下环境的判断</p>

<p>有DNA的产品才会演化   <br/>
DNA是产品的价值观,认知<br/>
如果将产品比喻为生命体的话,它是有DNA的
小小码农注解: <br/>
如何构建自己产品的DNA呢?</p>

<p>群体效应是社交产品的核心  <br/>
通过对人内心欲望的洞察,简历虚拟社会的规则,引发群体效应,群体在推动规则变化  <br/>
案例:如何调戏明星  ?</p>

<p>将用户分为 高中低端是不道德的<br/>
做人人都爱用的产品<br/>
通用产品做得低龄化是不专业的体验 <br/>
产品面前,人人平等</p>

<p>先做产品结构 之后才是细致功能 <br/>
产品结构是骨骼,不可多变和复杂 <br/>
创作从骨骼开始,而不是先造肌肉  <br/>
案例 : 微信的产品结构</p>

<p>功能模块之间是有机联系的恭喜  <br/>
案例:朋友圈和个人相册<br/>
不为多头像而多头像</p>

<p>设计就是分类  <br/>
分类人类大脑的识别模式 <br/>
分类就是化繁为简的方法之一 <br/>
PM每天都应思考 如何让事情更有调理
案例:微信保证只有四个底部tab
小小码农注解: <br/>
这个赞同,因为tab太多了其实很没有必要,能快速到达的简单就好了.</p>

<p>抽象方能化繁为简 <br/>
抽象是提取实物的共有特性 <br/>
抽象使得用简单模型覆盖多样性 <br/>
高度抽象带来简单化 <br/>
案例:朋友圈内容的原子颗粒
案例:一个认证帐号,覆盖名人,艺人,企业等&hellip;</p>

<p>越简单的分类越容易接受
QQMail 没有变复杂<br/>
微信会升级,但结构(和界面)会保持简单</p>

<p>找到需求背后的本质需求   <br/>
案例:朋友圈改在通讯录里做分组吗?
用户说要分组,但屏蔽几个人才是需求  <br/>
如果你做了分组,又没人用了&hellip;</p>

<p>像场景来做设计  而非功能列表 <br/>
&ldquo;if you want feature X,but a HTC/Samsung what ever instead&rdquo; &mdash; by Jony <br/>
不堆切功能.功能服务于场景和整体体验. 没有孤立的功能<br/>
案例:链接键盘,还是web微信  <br/>
案例,自动播放还是驾驶模式</p>

<p>面向场景,才能取舍  <br/>
在线状态? 手机是永远在线的 <br/>
PC版?PC版会离线,无法像短信一样实时  <br/>
去除人们在QQ上说&#8221;88&#8221;的习惯  <br/>
小小码农注解: <br/>
面向场景,详细用户什么时候会想起用这个产品么? 什么时候最想用这个产品</p>

<p>让功能存在于无形之中 (pony语)
案例:餐饮上架插件不可见,扫描才有 <br/>
让新版看不出变化
只有新手才将所有(新)功能罗列在显眼的地方</p>

<p>手机和PC的区别   <br/>
手机是肢体的延伸,手机和人是一体的(通过各种传感器).PC是外物,即外部环境.
移动互联网产品不是简单的PC到手机的移植  <br/>
如果没有手机,就没有这份PPT,
做没有web的移动互联网产品 <br/>
小小码农注解: <br/>
这个前期风险还是很大的,其实对于私密性应用可以这样处理,但是大部分信息还是会被公开的.</p>

<p>不过度设计 <br/>
做得越多可能错的越多 <br/>
对主干精雕细琢,对枝叶不做深深<br/>
案例:附近的人</p>

<p>宁愿损失功能也不损失体验  <br/>
部位了流量而到处加入口  <br/>
案例:回话界面左上角的编辑按钮,为什么不可以有?</p>

<p>产品还是运营?
做一劳永逸的事情  <br/>
你在做Class(类型),还是在做Instance? <br/>
好特性不需要做加法,一次成型  <br/>
邮箱漂流瓶和微信漂流瓶的不同 <br/>
好产品会召唤用户 (pony语)</p>

<p>让用户推动用户  <br/>
而非系统管理员来推动   <br/>
案例:如何让用户设置头像 ?</p>

<p>极简方能不被超越   <br/>
案例: 摇一摇,与pony的回信中,&ldquo;摇一摇何难被超越,因为我们已经做到极简&rdquo;
小小码农注解: <br/>
这个是肯定,因为没有比自己做的更简单的了,但是减肥的同时,还得丰满,该大的地方还是得大,这样才有人喜欢.</p>

<p>面向两年后的场景来设计  <br/>
案例:已送达状态? 2年后未来状态足够好,比如是能送达的.</p>

<p>操作的响应速度永远是第一的  <br/>
案例: 朋友圈的timeline的流畅度</p>

<p>如果一个特性不能让人兴奋,不如不做   <br/>
你不能真正理解自己不感兴趣的需求 <br/>
好奇心是PM的驱动力  <br/>
逻辑的完美也是令人兴奋的 <br/>
在单点获得口碑,而不是一些列可有可无的特性     (QQ邮箱中转站)</p>

<p>保留变化  <br/>
不在1.0做2.0该做的  <br/>
对不确定的,保留变化余地,先不做  <br/>
上线是为了验证想法,是改进的开始   <br/>
案例:web微信,不会做大而全 <br/>
案例:朋友圈评论的回复</p>

<p>如果没有自然增长,就不必推广<br/>
硬导入用户, 只会给用户留下坏印象,以后再也不来了  <br/>
KPI是好产品的副产品,部位KPI而改变产品</p>

<p>保持粗放,保持笨拙   <br/>
如果没有好的解决方案,就先放着不做 <br/>
案例:发错群的问题 <br/>
案例:群名牌,群屏蔽,
抓大场景,忽略小场景  <br/>
非重要特性就放到设置里,放到设置里不如不做</p>

<p>如果解决方案复杂了,那一定是哪里出错了</p>

<p>在每个细节中体现认知
每个细节都做到自己满意<br/>
满意是否就好: 取决于你的水准 <br/>
案例:来自iphone和来自深圳</p>

<p>给用户选择权 <br/>
除了核心功能,都做成可卸载的插件 <br/>
保持简单</p>

<p>全球只做一个版本&hellip;.
小小码农注解: <br/>
这个也很赞,因为只要有华人大量使用,就能存货了,其他的国家的用户还是有很多的,只做一个版本还是很赞的.</p>

<p>把用户体验做到极致就是创新</p>

<p>你的价值观(态度)决定产品特性</p>

<p>改变用户习惯<br/>
新的习惯让用户更舒服</p>

<p>抛弃不人性的创新 <br/>
避免战略行为替代真实需求</p>

<p>从人出发,改变商业模式  <br/>
让品牌在朋友中传播 <br/>
媒体的电子化  <br/>
明星如何和人一一对话?</p>

<p>没有设计,只有解决问题  <br/>
不以设计为导向 ,以用户为导向</p>

<p>创新,还是抄袭    ??</p>

<p>自然观  <br/>
自然是人最本能的行为和心理反应    <br/>
对产品的启发:简单,不用想</p>

<p>去技术化的思维   <br/>
看IOS是如何隐藏技术的 : file? folder ? uninstall? process ? <br/>
复杂的技术要隐藏在极度易用性的背后   <br/>
产品是由理性搭建,却用来表达感性<br/>
产品接受中不容许出现&#8221;支持&#8221;两字  <br/>
&ldquo;支持XX特性&rdquo;,这是过时的产品表达  <br/>
小小码农注解: <br/>
去技术化,不等于不追求技术,而是将技术融入体验之中吧.个人感觉.</p>

<p>让交互模拟自然<br/>
用动画效果逼近自然:朋友圈的评论弹出画面<br/>
交互就是获得反馈,尽可能产生反馈 <br/>
产生自然易理解的反馈</p>

<p>单一路径  <br/>
一个固定哪怕更长路径的操作,胜过提供几个单需要用户思考的路径    <br/>
Home键 <br/>
快捷方式不重要,且不可依赖  <br/>
不把多个功能合并到一个操作里,会增加复杂度</p>

<p>酷是自然而简单的</p>

<p>做三秒就会用的特性</p>

<p>管理是不自然的
人不让用户卷入到&#8221;管理&#8221;工作组里</p>

<p>但线索最美</p>

<p>换肤是不自信的体现 <br/>
缺乏对默认皮肤的新新,损失视觉品牌效果</p>

<p>不让用户选择<br/>
只提供一种通用模式   <br/>
不提供可选的方案(如列表和瀑布选择)
每增加一种选择,都让用户迷惑,不固定感 .</p>

<p>在说为什么没有&#8221;已发送&#8221;,&ldquo;已阅读&rdquo;
自然是种直觉</p>

<p>少比多更好 <br/>
内容太多会破坏社区气氛 <br/>
朋友太多会导致社交恐惧<br/>
关注太多会导致缺乏吸引力</p>

<p>一亿用户就是一个用户
他们是相同的<br/>
你可以很&#8221;自然&#8221;地模拟他们,如果你广泛听取他们的需求,理解他们的需要  <br/>
你知道他们的喜怒哀乐  <br/>
心怀一亿用户</p>

<p>瞬间变成傻瓜用户<br/>
训练自己瞬间变成傻瓜用户的能力 <br/>
通过大量CE来了解人们是如何用产品的  <br/>
从傻瓜用户角度来体验产品,才能发现问题 <br/>
注重第一体验的感觉,用熟了就不能发现问题了 .</p>

<p>锻炼对&#8221;自然&#8221;的直觉  <br/>
通过对上千问题的分析来形成直觉<br/>
倒空自己的过往经验,来更本性的眼光看世界.比如技术控的去除 <br/>
对复杂问题的解决,可能不来自推理,而是直觉</p>

<p>PM的心态  <br/>
求知,不为自尊心而战<br/>
放心情绪,才能深入问题本质 <br/>
用数据和调研来说话  <br/>
你的短板可能就是你的强项.比如,社交恐惧者可能知道怎么做社交产品</p>

<p>气质篇 <br/>
改变旧世界的意愿 <br/>
我对iPhone5的唯一期待,就像iPad 3G 一样,不支持电话国内.这样,我少了电话费,但你可以用kik跟我短信,用google voice更我通话,用facetime跟我视频 .   <br/>
发表于微信立项前一天  &hellip;.   这些现在微信都已经实现了. &hellip;..</p>

<p>有自己的理念和愿景   <br/>
微信是&#8221;一个生活方式&#8221; <br/>
理念决定你的产品的高度  <br/>
你的态度会反映在产品的各个细节中,无可回避</p>

<p>微信是&#8221;一个生活方式&#8221; <br/>
是&#8221;个&#8221;,不是&#8221;种&#8221; <br/>
微信和QQ的区别在这里</p>

<p>让技术产品传达人文意识  <br/>
一千个人有一千种感觉 <br/>
微信启动画面</p>

<p>&ldquo;少发微信&rdquo; <br/>
还有哪个产品会让用户少用?  <br/>
反应你对产品和用户的理解高度   <br/>
不为营销而做.虽然它会有营销效果</p>

<p>让欢迎页成为你的产品发布会  <br/>
新功能罗列是技术斯文 <br/>
不开线下的产品发布会<br/>
每个欢迎页都是一个故事  <br/>
是产品中为数不多的可以表达你感受的地方<br/>
让产品值得期待</p>

<p>不听摇滚的程序猿不是好产品经理 <br/>
摇滚意味着烦传统,人性,自由等
有与众不同的斯文,做与众不同的事</p>

<p>做人性化的广告 <br/>
不为广告而广告 <br/>
来自用户的感受是最好的</p>

<p>找最牛的合作方  <br/>
兔斯基 <br/>
国家地理摄影师 <br/>
NIKE</p>

<p>文字反应气质  <br/>
产品中的文字是你和用户在说话,反映了你的气质 <br/>
清晰易懂.表明你是有逻辑头脑清晰的人   <br/>
不讨好用户;不抬高自己.把用户当朋友</p>

<p>一些避免使用的词语 <br/>
不用&#8221;吧&#8221;  <br/>
不用&#8221;哦&#8221; <br/>
勉强用户的句式(&ldquo;还不邀请朋友&rdquo;) <br/>
不用&#8221;成功&#8221;(已保存) <br/>
用&#8221;你&#8221;,不用您</p>

<p>未来感   <br/>
视觉关键词: 未来,科技,抽象,简约  <br/>
忘记中国元素 <br/>
抽象,还是模拟现实? <br/>
只有体会到简约之美,才能应用它  <br/>
视频会好北京,该不该用蓝天白云</p>

<p>你没有竞争对手 <br/>
重要的是,自己想要做什么,而不是他们在做什么 <br/>
微信没有竞争对手 , 也不分析竞争对手 <br/>
他们不是我们的产品经理  <br/>
与其关注同行,不如关注未来</p>

<p>作品,而不是产品   <br/>
作品会打败功利的产品(Steve Jobs如此评价同微软的竞争)<br/>
作品渴望完美</p>

<p>工匠,而不是设计师  <br/>
每天优化十个细节(自己和周围人使用中遇到不便的地方)<br/>
你做的每个细节都是在创造,它包含了你的看法,思路,实现方法的选择  <br/>
不空谈设计</p>

<p>做有灵魂的产品<br/>
有灵魂:有机联系的结构(产品结构),有肌肉(功能),有气质(价值观),反应敏捷(速度快),理性(逻辑清晰,交互合理),谈吐(文案). <br/>
像人一样,有整体和谐而不精神分裂的 <br/>
保持对产品的坚持甚至独裁才能使产品不分裂.  集体决策导致平庸和各个部分的分裂. 但需要集体讨论和理解他人意见</p>

<p>产品是有个性的. 它可能不完美,但应该像手工艺品一样外表精致,内在和谐.</p>

<p>让个体更自由  <br/>
互联网产品应该让个体更自由 <br/>
微博的评论机制该如何评价?<br/>
个性化长尾产品是未来走向   <br/>
工业化满足低成本,个性化体现独特价值</p>

<p>UI篇</p>

<p>UI是通过产品和用户交谈 <br/>
禁止使用竞争对手的产品  <br/>
UI设计师禁止使用竞争对手产品,避免被误导  <br/>
产品经理可以体验,但不应多用直接竞争对手产品</p>

<p>UI围绕特性,而非反之<br/>
先特性,在UI <br/>
不因为一个好的UI创意而改变场景和特性</p>

<p>条理清晰胜过视觉表现<br/>
分类,还是分类  <br/>
分类体现在缩进关系中  <br/>
条理清晰比快捷更重要  <br/>
案例:对话输入条,一行还是两行?</p>

<p>只有一种式样 <br/>
一个应用中,为保持一致,尽可能只有一种字体,一类控件,一种式样,一种背景  &hellip;.
多种表现让用户迷惑  <br/>
尽可能用标准的界面   <br/>
合理比个性更重要</p>

<p>每个界面只有一个主题   <br/>
摄影原则: 一张照片只有一个主题  <br/>
不做二分式界面 <br/>
突出主题</p>

<p>每个对话框都有一个明显的默认按钮  <br/>
别让我思考  <br/>
案例:发送原图里个令人迷惑</p>

<p>对常用操作精益求精<br/>
滚动到最上面的自动拉取的平滑性  <br/>
聊天背景的进化</p>

<p>需要文字解释的功能不是好体验   <br/>
不要假定用户会看文字解释  <br/>
不要假定用户了解背景知识  <br/>
做到不用解释就会用 <br/>
少用tip,像膏药</p>

<p>隐藏数字 <br/>
N个照片  <br/>
N个联系人  <br/>
78.56下载中</p>

<p>搜索手机上的新交互  <br/>
手机往往在运动中使用 <br/>
手机是肢体眼神,有更多传感器</p>

<p>锻炼自己的审美能力 <br/>
你的产品的美感不会超过你的审美能力 <br/>
每个细节都会体现你的审美力  <br/>
案例:朋友圈的下拉转轮</p>

<p>我说的都是错的&hellip;&hellip;&hellip; (老大们都很谦虚,都为自己掩饰,)</p>

<p>微信背后的产品观</p>

<p>葵花宝典第二部,感觉内容很多,有若先自宫,未必成功的感觉,实在是这些内功和外功相配合的这些,还是得在真正的实战中去逐一的领悟才行,所以还是在接下来自己做产品的时候,不断的将这些看到的用进来,遇到不懂的在掏出这些秘籍看看.</p>

<h3>总结</h3>

<p>2篇长文终于看了一部分了,现在在回到自己的产品中来,从这2篇文章中来总结自己所需要的.   <br/>
如果大家还有更好的文章欢迎推荐,产品之路漫漫,只有自己去走一遭,才能体会个中滋味.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何做一款产品]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2014/03/08/ru-he-zuo-%5B%3F%5D-kuan-chan-pin/"/>
    <updated>2014-03-08T21:31:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2014/03/08/ru-he-zuo-[?]-kuan-chan-pin</id>
    <content type="html"><![CDATA[<p>如何做一款产品</p>

<p>思想中一直停留着一个信念,我要自己打造一个自己认同的产品,做自己喜欢做的事情,并将他当成毕生的事业来坚持!</p>

<p>但是,现实是为了生存而去工作,工作中往往做的事情不是自己很喜欢的事情,但是,你不得不去做.
做为技术,有的时候面对一堆很挫的需求,依旧要去实现,面对着很不好的设计,也要去实现.而这个时候自己就把自己当成是一个没有感情的人,叫我怎么做我就怎么做吧. 其实在这样的时间状态久了.就会感觉渐渐的自己就只是在应付工作了.</p>

<h3>为了生存而工作</h3>

<p>做技术,在不同的环境下有不同的影响,在大的公司,能有各种环境,能遇到各种的问题,让你感觉有挑战性,但是也有官僚主义和繁杂的各种流程,在小公司,没有需求说明书,口头表达也能快速解决问题,但是有的时候也会做许多的无用功,但是,总之的总之,我们能够拿到工资,来养活自己.这个是工作的心态,很多时候,在不同的团队,自己的士气也是会不一样的,进而做出来的东西的质量也是不一样的.</p>

<h3>当业余时间想打造一款自己喜欢的产品</h3>

<p>春暖花开,这个是我的世界.
我想通过我自己喜欢的语言,用自己喜欢的组件和开源产品,来搭建自己的作品,这个时候我会如何来做呢.  <br/>
做自己喜欢的东西  <br/>
奉献出所有的自己的业余时间
来写自己喜欢的代码,我现在选用的是比较冷门的nginx + lua方面的openresty,这个是由agentzh在一直维护的一个比较不一样的开发组件,为什么我会用它呢.其实很简单. <br/>
一个东西,它简单,它强大,它更省资源,这就是我需要的东西. 现在我就是使用他.一些朋友用他来写第三方组件,扩展了很多功能出来. 现在从用起来到现在1年多了,感觉还是很赞啊.喜欢内核化,喜欢作者的快速解决问题的态度.</p>

<p>选择一个业务方向
一直以来创业的方向有很多,现在基本你能想到的方向都有人在实现,但是我们最终很少人能真正的知道自己想要什么,并最终将自己心中的想法最终打造出一个产品出来.  <br/>
我自己选择的是电子商务方面,现在阿里系和腾讯系在不断的扩张他们的各种领地,在电子商务方面,不断的打造自己的产品出来. 对于电子商务,我个人认为,会是一个进化的过程,有人就会有交易,但是对于交易而言,结果了这么多年的发展,现在在国内外得大不同的平台上来看,乐天,淘宝,eBay,还是Amazon都在不断的扩张自己.作为一个生活中不可或缺的部分,我就想知道,我自己想要什么?大家想要什么,是不是能给人一个列表,满足他们所有的需要?或者能够感叹,哦,这些就是我想要的.真的就是我需要的. <br/>
这个又说到了智能算法了,特别是电子商务领域的推荐系统,从亚马逊的这10多年来的研究表明,这些根本也没有对真实的对商业营收有多少帮助,但是在现在大数据的结合的情况下,是否真的是还是过去10年的那样的贡献比率的增长呢.我个人还是持怀疑态度的.针对现在的大数据的应用,能够在很多情况下进行推荐和预测得到很多的靠谱的结果.还是在很多的场景下是靠谱的,最终还是有智能化的产品出现的.这个还是依赖于人工智能和机器学习领域的发展,但是百度现在往这个方面是下注了很多,但是实际上,在未来5-10年内还是很难看到有很好的效果出来的.最起码是我个人这样认为的.   <br/>
说了这么多,我选择的方向是什么, 电子商务领域的个性化推荐即预测技术. 基于一个商品分类的排序  <br/>
我想做的是  <br/>
我想去买一个奶瓶,我想知道哪些奶瓶是比较好的,不管是价格,购买渠道等,那么我们就想知道这个东西的列表,在对这个列表进行排序,筛选,最终获得自己想要的列表.然后能到指定的地方去购买.针对现在国际化和环境的因素考虑,国际化商品不存在什么问题,海外代购的信息和物流体系得到很大的提高,未来几年,不单单是国内的淘宝,现在的海购也是一个发展很快的趋势行业.所以个人认为针对很多商品还是会垮国界的.从而弱化了平台的依赖性.
所以像现在的淘宝发展了天猫,进而又有了天猫国际,针对商品的量上来看,是越来越少的了. 而走的越来越精.
而我想做的是在这样更精细的情况下,能进行更详细的筛选得到最终自己想要去买的那个目标.</p>

<h3>产品是一个详细的东西</h3>

<p>打造一个产品,有一个简单的想法不行,就会开始动手做最小模型,不断的迭代,最终做成一个东西出来.
现在来看我自己,做着做着就会冒出不同的想法进而做的东西不断的偏离.
做一个东西,像现在的产品,你可以做一个简单的App应用,也可以只做一个网站,或者就单纯的做一个小程序.
其实对产品的界定的,还是看自己,在一个团队,有多人一起配合,这样就能做出一个产品出来.
很难找到一个这样的团队,这个团队里面的气氛很赞,这些是需要很多时间和际遇的,可遇而不可求的.
做一个产品,需要一直不断的打造完善,做出一个最小化的产品.</p>

<p>写不下去了.待续&hellip;&hellip;..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[跟上潮流]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2014/01/23/gen-shang-chao-liu/"/>
    <updated>2014-01-23T16:15:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2014/01/23/gen-shang-chao-liu</id>
    <content type="html"><![CDATA[<h1>跟上潮流</h1>

<p>跟上发展的潮流,为什么想写这个话题,因为,现在在做很多的很多的事情,都和网络和移动有关.
跟上潮流在我看来所指的就是让自己用好这些软件,软件仅仅是工具,用不用还在于你自己.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014年展望]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2014/01/16/2014nian-zhan-wang/"/>
    <updated>2014-01-16T10:45:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2014/01/16/2014nian-zhan-wang</id>
    <content type="html"><![CDATA[<h1>展望2014年</h1>

<p>2013年,匆匆的过去了,2014年已经来了,今年想学些什么,做些什么呢?</p>

<p>给自己列一些计划出来,去年,精力主要花在了hadoop,hbase上,这个是因为工作方面的要求. <br/>
私下里面的时间都花在了yagami框架上了,这里的话主要是自己的api后端框架,虽然写的很烂,但是好歹是跑起来了,起了个好头吧.</p>

<p>2014年对自己的时间精力,得有一个统一的整理了.年末休息的这段时间里面,听到了很多朋友的事情,他们都是有规划有发展的做事情,而且都在努力的进展中,能突破自己的限制. <br/>
比如,听到一个哥们和他的媳妇一道来日本了,但是打算转战美国.其实现在技术不怎么重要,但是要学习一个技能,首先是语言技能,因为在交流上能突破限制,接下来的才是真正的工作技能,但是这块在进入公司之后是可以去学习的.  <br/>
现在基本大部分的IT工作者都是能找到工作的.多了语言技能在其他的个个地方,能更好的找到工作,当然生活就不存在问题了.</p>

<p>所以在2014年,第一件重要的事情,就是语言,当前日语和英语,在过去的一年依旧是惨不忍睹!</p>

<h2>语言的威力</h2>

<p>为了能更好的生活,现在越来越认识到,语言的重要性,学习语言必须全身心的投入,现在的精力太分散了.  <br/>
日语,基本的听说读写,有周さん每周的日语课,还有去川口的ボランティア去和其他的老师交流,提高口语能力. <br/>
英语,得想着如何学习,现在每天早上都比较晚起来,因为在日本养成了晚睡的习惯,所以这个是修改自己的作息时间,今年去澳洲,感觉自己真的很少开口说,没有说,就很难有交流.所以接下来的重重之中在于这2们语言.</p>

<h2>技术爱好</h2>

<p>对于工作和生活中,其实对于技术的诱惑很多时候难以抵制.虽然公司的工作主要在维护Hadoop,HBase但是做的很多都是比较边缘的工作,没有一个项目能实质性的深入中,然后将整体的项目的个个技术难点能够掌握掉.在加上日本人的守旧,依旧还在实用很老版本的系统,所以在工作时间中,每天也拿出了一些时间来对当前的新版本和新技术,进行更多的思考,现在主要学习的方面,依旧是java方面的内容</p>

<ol>
<li>Spark 重点学习的部分, 现在使用spark集群和Hadoop,HBase生态圈相关的技术,来实现真正的智能分析,因为智能化的处理是我一直的方向,还有就是机器学习部分的.主要是想在工程上有一个实用的方案,能够直接的改吧改吧下能用在生产上面.</li>
<li>yagamiko 对于Openresty的内容,最近很少去关注邮件了,所以最近也没啥看,主要是看Openresty的google group里面的大家的内容,今年继续优化下.</li>
</ol>


<h2>壹佰款国际购物项目</h2>

<p>这个是09年一直在做的项目,后来由于种种原因停滞了,到2013年底,又重新启动了,还是回归原始的思想,通过一个项目,把自己想做的东西做出来.真心的去尝试一个项目,从最早的产品思想,到一步一步的实现,最终希望能够上线,让别人来使用这个项目,也算是自己人生的一个Ambition,想做的事情,尽量的能够去做到,而且不断的把它做好,好多时候也可以不计较结局如何.享受这个过程就好了.</p>

<h2>总结</h2>

<p>其实生活简单一些就好了,对自己想要做的事情,尽力去做,尽人事听天命,未雨绸缪,虽然现在会累一些,但是终有一天,自己能达到自己想要的那种生活状态的.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[迟到的年终总结2013]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2014/01/08/chi-dao-de-nian-zhong-zong-jie-2013/"/>
    <updated>2014-01-08T18:38:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2014/01/08/chi-dao-de-nian-zhong-zong-jie-2013</id>
    <content type="html"><![CDATA[<h1>迟到的年终总结(2013)</h1>

<p>元旦放假去了趟澳洲回来,就一直忙碌到现在,本来年底的事情就比较多,更是特别坑的事情多. <br/>
今天终于有小小点时间来写一些总结了.</p>

<p>2013年,一整年时间几乎都在日本度过,也回国过3次,由于家人的原因,现在总算都过去了. <br/>
2013年,实现了自己的2个愿望,把父母申请来日本,实现了,接下来自己也去了趟澳洲,和弟弟重逢了,家庭的温暖也能够深刻的感觉到. <br/>
2013年,一年里,Allen也在不断的长大,一岁多的小孩子,现在会到处调皮捣蛋了,时间过的真快,看着宝贝的成长,自己有一种莫名的压力,宝贝长大了.当爹的我更要把重心放到事业上来了!</p>

<p>2013,家庭,工作和自我提升.</p>

<!-- more -->


<p></p>

<h3>家庭</h3>

<p>2013年,在日本的日子,感觉非常快,也在慢慢的适应日本人的工作节奏.<br/>
生活一如既往的如此,有父母的照顾,竟然增重了3公斤,这个已经破了记录了. <br/>
老婆也开始上班了,为了儿子的未来而努力了.打算买房子,最近东京的房价也涨了不少.
弟弟那边,过去看了下感觉生活还是可以的.让我感觉可以放下心理的一块石头.</p>

<h3>工作</h3>

<p>在bit-ware的日子里面,有幸得到夏哥的照顾,公司的同事也很nice,真的感觉自己比较幸运,在工作的地方有这么多的nice的人,虽然收入不见咋个涨,但是工作上,现在的现场的氛围还是可以的,虽然公司不大,但是没有那么多的条条框框的束缚.自然就好了很多了.  <br/>
今天工作上面,主要集中在HBase,Hadoop这块,现在这个公司还在变态着用着0.20.4的老掉牙的版本.但是没有办法也要一直维护者.  <br/>
自己在今年一年时间里面,也写了几篇关于hadoop,hbase的文章,总算是自己入门吧. <br/>
在余下的日子里面,主要是学习了一些基本的Ios的操作知识.写个小app,鼓励下自己.</p>

<h3>自我提升</h3>

<p>yagamiko <br/>
一直以来想做自己喜欢做的事情,就把大部分的时间投入了yagamiko的开发,yagami是基于openresty的一个服务器端框架,用来快速的开发后端.</p>

<p>freeflare
打算以后的公司叫这个名字,网站的框架也积累起来了,开发上速度相对快了一些.</p>

<p>yibaikuan
壹佰款项目也在进行中了,这个是自己的一个很努力发展的项目.电子商务方面,总是有市场的,平台不好做,对于小团队更是如此,希望通过自己的努力能把团队带起来.</p>

<p>最后的总结
展望2014,能够实现自己的愿望!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[spark on yarn 学习(一)]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2013/12/11/spark-on-yarn/"/>
    <updated>2013-12-11T13:48:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2013/12/11/spark-on-yarn</id>
    <content type="html"><![CDATA[<p>最近看到明风的关于数据挖掘平台下实用Spark和Yarn来做推荐的PPT,感觉很赞,现在基于大数据和快速计算方面技术的发展很快,随着Apache基金会上发布的一个个项目,感觉真的新技术将会不断出现在大家的面前.</p>

<p>作为技术发烧友,作为一个看客,来围观下,不过从PPT中列出来的技术来看,未来的发展趋势还是说是有的,而且还是很有发展前景的. 现在Spark和Yarn也就发布2年多的时间,随着社区力量的跟上,不断的将之前的项目都放到一个更好的资源架构的整合上来实现.特别是放到内存上来实现,在速度和效率上还是确实有区别于之前的其他技术.所以作为巨头之一的淘宝,就跟上的技术发展的趋势了.但是作为小公司而言,没有这样的大规模的机器部署的情况下,如何用利用好这些技术呢?</p>

<p>下面是PPT中记录的一些笔记和插图.算是对整个架构有一个出不的了解,接下来有时间就努力的去尝试下.</p>

<!-- more -->


<p>插上翅膀的大象
基于Spark on Yarn的淘宝数据挖掘平台</p>

<p>为什么选择Spark On Yarn
Spark On Yarn的原理和框架
淘宝在Spark On Yarn上做的工作
基于Spark On Yarn的数据挖掘平台架构</p>

<p>案例性能</p>

<p>Hadoop在数据挖掘遇到的问题
多次迭代 <br/>
中介数据的序列化和反序列化 <br/>
简单的MR模式 vs 复杂的机器学习算法 <br/>
OO编程 vs 函数式风格 <br/>
图计算能力</p>

<p>Why Spark <br/>
RDD  <br/>
  内存计算 <br/>
  快速迭代 <br/>
  DAG</p>

<p>Scala <br/>
  FP编程 <br/>
  Actor编程 <br/>
  并发能力</p>

<p>Hadoop <br/>
  MapReduce <br/>
  HDFS访问</p>

<p>Spark的生态圈
Shark(Hive),Streaming(Storm),Mllib(Mahout),Graphx(GraphLab)    <br/>
Spark (MapReduce) <br/>
Local Standalone Mesos  Yarn
HDFS    HBASE</p>

<p>Yarn版本0.23.7 目前淘宝部署了 5000 * 2 的架构</p>

<p>Spark On Yarn 的框架   <br/>
Spark的生态圈 <br/>
<img src="http://xinqiyang.freeflare.com/images/blogimg/sparkonyarn/sparkonyarn1.png" alt="image" /></p>

<p>Spark On Yarn的实现流程 <br/>
<img src="http://xinqiyang.freeflare.com/images/blogimg/sparkonyarn/sparkonyarn2.png" alt="image" /></p>

<p>推荐系统的具体架构  <br/>
<img src="http://xinqiyang.freeflare.com/images/blogimg/sparkonyarn/sparkonyarn3.png" alt="image" /></p>

<p>总结
粗略的了解下技术架构,接下来有时间的话,深入的实际尝试下,搭建系统跑下svm等,体会下这个系统!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[openresty third party modules]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2013/11/23/openresty-third-party-modules/"/>
    <updated>2013-11-23T22:26:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2013/11/23/openresty-third-party-modules</id>
    <content type="html"><![CDATA[<p>openresty 第三方模块列表
这个是YagamiFramework(八神框架)系列文章的一部分,有遇到好的插件,我会持续的更新这篇文章的.</p>

<p>最近爱上openresty了,倒腾了后端,用Lua重写了第三方模块了,所以将涉及到的第三方模块分享给大家.</p>

<p>Yagami框架整合了以下的第三方模块,用了之后感觉还是挺赞的.</p>

<!--more-->


<p>yagami..ko from dependent</p>

<p>&mdash;&mdash;&ndash; need to add &mdash;&mdash;&mdash;&mdash;&ndash;</p>

<p>logger-socket <br/>
<a href="https://github.com/cloudflare/lua-resty-logger-socket">https://github.com/cloudflare/lua-resty-logger-socket</a> <br/>
这个插件是由openresty作者agentzh所在的公司开发的一个logger插件,将产生的Log发送syslog到特定的的机器的</p>

<p>lua-resty-beanstalkd <br/>
<a href="https://github.com/smallfish/lua-resty-beanstalkd">https://github.com/smallfish/lua-resty-beanstalkd</a> <br/>
一个beanstalkd队列的第三方的lua客户端,做着似乎smallfish是ngx_lua的作者之一,很赞的项目,最近在学习beanstalkd中.</p>

<p>&mdash;&mdash;&ndash; need to add &mdash;&mdash;&mdash;&mdash;&ndash;</p>

<p>一些扩展的Mysql数据库相关的操作方法
<a href="https://github.com/LuaDist/dado/blob/master/src/dado/sql.lua">https://github.com/LuaDist/dado/blob/master/src/dado/sql.lua</a> <br/>
<a href="https://github.com/LuaDist/dado/blob/master/src/table/extra.lua">https://github.com/LuaDist/dado/blob/master/src/table/extra.lua</a></p>

<p>lua-multipart-post <br/>
<a href="https://github.com/catwell/lua-multipart-post">https://github.com/catwell/lua-multipart-post</a> <br/>
这个是一个基于lua实现的multipart post的插件,将数据拼装成请求发送到后端的存储服务上.</p>

<p>lua_waf <br/>
<a href="https://github.com/loveshell/ngx_lua_waf">https://github.com/loveshell/ngx_lua_waf</a> <br/>
这个是loveshell写的一个nginx的防火墙插件,功能很强大,推荐给大家试用.</p>

<p>resty <a href="http:">http:</a> <br/>
<a href="https://github.com/liseen/lua-resty-http">https://github.com/liseen/lua-resty-http</a> <br/>
<a href="https://github.com/dcshi/lua-resty-http">https://github.com/dcshi/lua-resty-http</a> <br/>
<a href="https://github.com/bakins/lua-resty-http-simple">https://github.com/bakins/lua-resty-http-simple</a> <br/>
Http的后端发送插件,自己拼装请求后往后端的特定服务器发送自己构造的请求很常用,推荐实用&hellip;.</p>

<p>qrdecode: (todo) <br/>
<a href="https://github.com/dcshi/lua-resty-QRDecode">https://github.com/dcshi/lua-resty-QRDecode</a> (error) <br/>
<a href="https://github.com/dcshi/lua-resty-QRcode">https://github.com/dcshi/lua-resty-QRcode</a> <br/>
QRCode相关的插件,是由就职于腾讯的dcshi写的, 实现了nginx lua生成和解析qrcode.  生成的我调试通过了,但是decode qrcode的部分,在centos下编译没有通过,这块需要在完善下.</p>

<p>ipquery: <br/>
<a href="https://github.com/charlieYong/ipquery">https://github.com/charlieYong/ipquery</a> <br/>
ipquery是在lua下查下纯真ip库的一个插件,挺赞的&hellip;&hellip;</p>

<p>uuid:  <br/>
<a href="https://github.com/dcshi/lua-resty-UUID">https://github.com/dcshi/lua-resty-UUID</a> <br/>
这个是uuid生成插件,可以生成长度为20和长度为8的uuid,测试过,很赞&hellip;.推荐使用,在centos 5.6/6.4下编译通过..</p>

<p>websocket: <br/>
<a href="https://github.com/agentzh/lua-resty-websocket">https://github.com/agentzh/lua-resty-websocket</a> <br/>
强大的websocket支持,貌似最新版本的Openresty已经提供支持了!</p>

<p>weedfs: <br/>
<a href="https://github.com/medcl/lua-resty-weedfs">https://github.com/medcl/lua-resty-weedfs</a> <br/>
<a href="http://log.medcl.net/item/2012/10/lua-resty-weedfs/">http://log.medcl.net/item/2012/10/lua-resty-weedfs/</a>
这个是由medcl写weedfs插件,weedfs是用go写的类似facebook图片存储系统的一个文件存储系统,支持sharding,很赞,就一个weed的单个文件,就可以跑起来了.
我现在将这个作为自己的服务器的小型文件存储后端.通过上面提到的multipost拼接请求将这些数据发送到后端的服务器存储起来,保存为一个uuid关联起来,写入到后端的数据库中&hellip;很赞&hellip;.</p>

<p>validate:  <br/>
<a href="https://bitbucket.org/djerius/validate.args">https://bitbucket.org/djerius/validate.args</a> <br/>
这个插件可以将validate做验证.</p>

<p>lua-cmsgpack:(todo) <br/>
<a href="https://github.com/guanlan/lua-cmsgpack">https://github.com/guanlan/lua-cmsgpack</a> <br/>
这个还没有测试过.</p>

<p>lua int64(error) <br/>
<a href="https://github.com/cloudwu/lua-int64">https://github.com/cloudwu/lua-int64</a>  <br/>
这个是云风写的,由于不支持luajit,所以在nginx_lua下失败了&hellip;..</p>

<p>暂时用的就这些,欢迎大家有更好的插件,一起交流!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一些好用的IOS App]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2013/11/13/my-ios-app/"/>
    <updated>2013-11-13T23:25:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2013/11/13/my-ios-app</id>
    <content type="html"><![CDATA[<p>记录下一些感觉好用的APP,软件不用很多,够用就好了.
其他的也会陆续的记录在这里,好用的软件真的挺多的</p>

<p>一些好用的Mac下的APP</p>

<p>alfred  这款快速启动工具真的是很赞. <br/>
zsh     一款能自动纠正拼写错误的sh,也是真的很赞
brew   就不用说了,自动安装mac下的那些库的相关软件.也是很实用.</p>

<p>最喜欢的软件:</p>

<p>Dropbox</p>

<p>Evernote</p>

<p>多米音乐</p>

<p>WeChat</p>

<p>Facebook</p>

<p>Youtube</p>

<p>Chrome</p>

<p>Line</p>

<p>Google Maps</p>

<p>Instagram</p>

<p>招商银行</p>

<p>QQ</p>

<p>FreeFlare</p>

<p>咕咚运动,这个今天测试了竟然有bug,发布到微信朋友圈里面,无法加载到具体的跑步信息.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[碎碎念]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2013/11/13/sui-sui-nian/"/>
    <updated>2013-11-13T16:21:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2013/11/13/sui-sui-nian</id>
    <content type="html"><![CDATA[<h1>絮叨下,所以起名叫碎碎念</h1>

<p>又重新开始写博客了,从2000年开始都不知道换了多少个博客了,自己的博客也搭建了好几个,但是现在深受github的影响,就又重新开始写blog了.</p>

<p>其实很多时候,都没有地方倾诉自己的想法,博客正好能将自己的想法写出来!</p>

<p>重新开始写后,从TODOLIST中挑出一些有意思的文章来写,这样每天的乐趣也仅此于此了.</p>

<p>上班之间,耍耍微博,看下订阅,现在看的越来越来了,都在完善自己的项目,下班之后,更是&hellip;<br/>
一天之中,如果都忙起来的话,很快就度过了&hellip;.</p>

<p>所以在一天之中,是否能留一些什么下来,那就是文字&hellip;.</p>

<p>此前这半年没有怎么写博客是因为都把写的东西放到evernote上了,很多东西不好意思发出来,也就慢慢的沉寂了&hellip;</p>

<p>从博客园到现在的github的博客,主要的好处是,不用浏览器想写就写,和提交代码一样,很符合大家的习惯,所以用的人就越来越多了&hellip;</p>

<p>今天修复了下分类,还有加入了版权声明,加入了TODOLIST,发现每天都能在上面捣鼓些什么.</p>

<p>今天到此了,整理下接下来博客的分类吧.</p>

<p>Life: 一些絮叨 <br/>
Tech: 一些技术文章,最近对于lua,redis,nginx的一些实用心得得总结下了.<br/>
BigData: 一些大数据下的使用  <br/>
OpenSource: 这里是自己的一些开源项目介绍<br/>
Product: 产品观念<br/>
Business: 关于事业和金融方面的,做一些笔记 <br/>
Japanese: 关于日语的一些文章<br/>
English: 写一些关于英语的 <br/>
Translation: 翻译的一些文章</p>

<p>这些就够了吧&hellip;&hellip;已经很多了.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[start CDH4.4]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2013/11/07/start-cdh4-dot-4/"/>
    <updated>2013-11-07T16:46:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2013/11/07/start-cdh4-dot-4</id>
    <content type="html"><![CDATA[<h1>前言</h1>

<p>对于hadoop,hbase由于项目紧张原因好几个月没有时间认真的来总结下了,最近有一些空,就来继续的把项目中用到的一些技术实际的写出来,动动手,好久没有写东西了,都生疏了,说起hadoop,公司还在用相对比较古老的hadoop &amp;&amp; hbase 0.20.* 级别的老版本了,这点充分说明日本人不想折腾,能跑的就好,针对企业用户最主要的是稳定,而且访问量也不是很大,所以关注的不多,但是对于技术发烧友的我来说,当然想尝试新的版本的了,从去年开始就一直关注hadoop2 的beta版本,现在虽然说发布了一个稳定版本,但是大部分还是在沿用老版本,本次说的版本是cloudera公司的 CDH4.4 ,目前最新的稳定版本,本次的目的是想把现有的一些应用迁移到新版本上,而不是在基础的安装和了解.</p>

<!-- more -->


<h1>配置CDH4.4</h1>

<p>本次不使用安装版本,就直接用了 cloudera已经打包好的虚拟机系统,我选择的是virtualbox的分支,因为在mac上virtualbox是免费开源的,目前来看跑的还算可以.
下载cdh4.4的地址:
<a href="http://www.cloudera.com/content/support/en/downloads/download-components/download-products.html">http://www.cloudera.com/content/support/en/downloads/download-components/download-products.html</a></p>

<p>下载下来的虚拟机是2.5G,解压开来就可以了.  <br/>
开起来机器配置不够的话,还是感觉比较卡的说,这些问题还是有的.
启动之后见如下图:</p>

<p><img src="http://xinqiyang.freeflare.com/images/blogimg/start_cdh/cdh_0.png" alt="Alt startcdh" /></p>

<p><img src="http://xinqiyang.freeflare.com/images/blogimg/start_cdh/cdh_00.png" alt="Alt startcdh" /></p>

<p>进入CDH的管理中心页面: <br/>
<img src="http://xinqiyang.freeflare.com/images/blogimg/start_cdh/cdh_1.png" alt="Alt startcdh" /></p>

<p>帐号和密码都是 cloudera ,  cloudera
进去之后就可以手动启动 hadoop,hbase了,这里启动后下次开机后这些服务将自动启动了.
<img src="http://xinqiyang.freeflare.com/images/blogimg/start_cdh/cdh_2.png" alt="Alt startcdh" /></p>

<h1>HBase的操作</h1>

<p>本次不是用默认自带的HBase shell, 使用公司<a href="http://www.bit-ware.co.jp/">www.bit-ware.co.jp</a>自己开发的HBashShellPro来进行操作演示.
首先在github上下载HBaseShellPro:  <br/>
<a href="https://github.com/bit-ware/HBaseShellPro/tree/0.94">https://github.com/bit-ware/HBaseShellPro/tree/0.94</a>
使用方法:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>wget --no-check-certificate https://github.com/bit-ware/HBaseShellPro/archive/0.94.zip
</span><span class='line'><span class="nv">$ </span>unzip 0.94
</span><span class='line'><span class="nv">$ </span>mv HBaseShellPro-0.94 HBaseShellPro
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>HBaseShellPro
</span><span class='line'><span class="nv">$ </span>vi /etc/hosts    -- add hbase quorum address:  172.17.1.xx  namenode
</span><span class='line'><span class="nv">$ </span>chmod +x run.rb
</span><span class='line'><span class="nv">$ </span>./run.rb
</span></code></pre></td></tr></table></div></figure>


<h2>列出表</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>con , current node
</span><span class='line'>l , list tables
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xinqiyang.freeflare.com/images/blogimg/start_cdh/cdh_s1.png" alt="Alt startcdh" /></p>

<h2>创建表</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>r 0  , disable <span class="nb">readonly </span>mode
</span><span class='line'>c tcdh f0 f1   , create table cdh , column family: f0,f1
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xinqiyang.freeflare.com/images/blogimg/start_cdh/cdh_s2.png" alt="Alt startcdh" /></p>

<h2>写入和读取测试</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>put tcdh r1 f0  q0  1 ,  write  row  r1
</span><span class='line'>get tcdh r1  ,  get row r1
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xinqiyang.freeflare.com/images/blogimg/start_cdh/cdh_s3.png" alt="Alt startcdh" /></p>

<h1>结语</h1>

<p>本次先写入到这里,验证了环境是正常的.
使用Cloudera的配置环境省去了配置的修改问题,但是要了解整个过程还是得多读资料,了解实际的组成和系统的流程,以便于更好的了解和使用HBase.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[markdown learn]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2013/11/07/markdown-learn/"/>
    <updated>2013-11-07T09:52:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2013/11/07/markdown-learn</id>
    <content type="html"><![CDATA[<h1>为什么要学</h1>

<p>从github上学习到很多,慢慢的感觉Markdown很流行,就发了点时间把自己的Github Page捣鼓成一个blog了,用了Octopress搭建了一个,然后用了最近很喜欢的BootStrap3的主题,看过去感觉还是很赞的.<br/>
一直很喜欢简单的感觉,而BootStrap的风格正是我喜欢的,正如Twitter那样的简洁.</p>

<p>回到Markdown,为什么要学习它呢,从今年5月份后就一直很少写博客了,因为一直在用Evernote,将所有自己的东西,或者看到的东西都记录进了Evernote,虽然说它也是很公开的,但是这个公开的内容,很难发布到博客上,所以最近还是捡起了Markdown,继续来写博客吧!</p>

<p>现在用Markdown写东西,用了Mou,感觉这个软件可以可视化的体现,写完的结果,感觉还是挺赞的,推荐使用!</p>

<p> <!--more--></p>

<h1>Markdown的语法</h1>

<h3>标题用类Atx的写法</h3>

<p>感觉类Atx的写法还是挺赞的,###这样的分隔方式,挺容易写的,而且分层上也挺方便.</p>

<p>区块引用</p>

<p>]]&gt;这里是区块引用<br/>
段落,但是为什么没有出效果呢
]]&gt;</p>

<p>这个貌似不起作用啊&hellip;.</p>

<h3>列表</h3>

<ul>
<li>列表1</li>
<li>列表2</li>
</ul>


<p>列表就是用 * 号加后面的内容的,这个也比较好记.<br/>
有序列表<br/>
换行的时候,多写2个空格吧,就好了.
1. 列表1<br/>
2. 列表2</p>

<h3>插入html</h3>

<table>
    <tr> <td>Table td </td> <td> Table td </td> </tr>
</table>


<h3>插入代码</h3>

<p>这里是一个代码段落</p>


<figure class='code'><figcaption><span>php code</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="k">echo</span> <span class="s2">&quot;hello workd!&quot;</span><span class="p">;</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>这里修正了下代码插入的显示.
使用&#8220;` 语言括起来的,效果还是挺好看的.</p>

<p>为什么我这里不显示代码行呢.只要用code标签阔少就可以了吧&hellip;&hellip;..但是不加pre标签,貌似不好看,加了又成空的了&hellip;.</p>

<h3>插入分隔线</h3>

<p>插入 *** 或者 &mdash;&ndash;  然后空格换行,就可以的了.</p>

<hr />

<h3>插入连接</h3>

<p>连接是用<a href=""></a>来隔开的. 如果有title则在里面加上tital &hellip;.
这里是一个连接 <a href="http://freeflare.com" title="freeflare">freeflare</a> 这个是一个行内链接.
如果是相对路径可以使用<br/>
这个是个内部连接<a href="http://xinqiyang.freeflare.com/about/">internal</a> 这个是个内部的连接..
如果是新窗口打开链接的话,得如何实现呢?</p>

<h3>强调内容</h3>

<p>是用<strong>括起来的.<br/>
</strong>这里是强调内容**<br/>
如果都有空白的话<br/>
* 这个是普通的字符 *</p>

<h3>强调代码</h3>

<p>可以用
<code>printf("aaaa");</code> 这里就是强调代码了..</p>

<h3>插入图片</h3>

<p>这里是插入一张图片啦.插入图片还是挺简单的 <img src="" alt="Alt" /> 和插入连接差不多.</p>

<p><img src="https://0.gravatar.com/avatar/b9cb8884236148ab30fb8cc71dd1ea3b?d=https%3A%2F%2Fidenticons.github.com%2Fec6623ee830f2a93a270a4f63721b80a.png&amp;r=x&amp;s=140" alt="Alt 插入图片" /></p>

<h3>插入自动连接</h3>

<p>就是用&lt;>来括起来的&hellip;<br/>
<a href="http://freeflare.com">http://freeflare.com</a> 这里就是一个自动链接的了.</p>

<h3>插入一些特殊字符</h3>

<p>比如 \ ` * _ {} [] () # + &ndash; . ! 等,这些可以随意使用.</p>

<h3>插入摘要</h3>

<p>添加这个就可以了 <!--more--></p>

<h1>结语</h1>

<p>其实Markdown的语法还是很简单易懂的&hellip;开始做页面还有写博客吧&hellip;.其实可以做出自己想要的效果的.
接下来多写几篇应该就很熟悉的了..
就是感觉用这个写又回到了用vim写代码的感觉的了.不过还是很赞&hellip;.出来的排版效果还是挺不错的.</p>

<p>简单就是好!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[blog update]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2013/11/05/blog-update/"/>
    <updated>2013-11-05T19:14:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2013/11/05/blog-update</id>
    <content type="html"><![CDATA[<p>this is my github blog, I will write more aritcle thoses days!</p>

<p>work hard!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[first]]></title>
    <link href="http://xinqiyang.freeflare.com/blog/2013/11/05/first/"/>
    <updated>2013-11-05T18:47:00+09:00</updated>
    <id>http://xinqiyang.freeflare.com/blog/2013/11/05/first</id>
    <content type="html"><![CDATA[<p>This is My first blog .
Hi, I am xinqiyang.</p>
]]></content>
  </entry>
  
</feed>
